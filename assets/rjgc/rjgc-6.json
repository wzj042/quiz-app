{
    "questions": [
        {
            "type": "single-choice",
            "content": "软件系统的可维护性评价指标不包括( )。",
            "options": [
                "可扩展性",
                "可测试性",
                "可修改性",
                "可理解性"
            ],
            "correct_answer": [
                "可扩展性"
            ],
            "analysis": "软件可维护性的主要决定因素包括可理解性、可测试性、可修改性、可移植性、可重用性、可靠性，但不包括可扩展性。"
        },
        {
            "type": "single-choice",
            "content": "以下关于软件维护和可维护性的叙述中，不正确的是( )。",
            "options": [
                "提高可维护性是在软件维护阶段考虑的问题",
                "软件的维护期通常比开发期长得多，其投入也大得多",
                "进行质量保证审查可以提高软件产品的可维护性",
                "软件维护要解决软件产品交付用户之后运行中发生的各种问题"
            ],
            "correct_answer": [
                "提高可维护性是在软件维护阶段考虑的问题"
            ],
            "analysis": "提高可维护性应在开发阶段充分考虑，而不是等到维护阶段再处理。"
        },
        {
            "type": "single-choice",
            "content": "以下关于文档的叙述中，不正确的是( )。",
            "options": [
                "项目相关人员可以通过文档进行沟通。",
                "编写文档会降低软件开发的效率",
                "编写高质量文档可以提高软件开发的质量",
                "文档是软件的不可或缺的部分"
            ],
            "correct_answer": [
                "编写文档会降低软件开发的效率"
            ],
            "analysis": "文档是软件的重要组成部分，能提高沟通与开发效率，认为其降低效率的说法是错误的。"
        },
        {
            "type": "single-choice",
            "content": "某银行为了使其网上银行系统能够支持持信用卡多币种付款功能而进行扩充升级，这需要对数据类型稍微进行一些改变，这一状况需要对网上银行系统进行( )维护",
            "options": [
                "正确性",
                "适应性",
                "完善性",
                "预防性"
            ],
            "correct_answer": [
                "适应性"
            ],
            "analysis": "不知道原答案"
        },
        {
            "type": "single-choice",
            "content": "系统交付用户使用了一段时间后发现，系统的某个功能响应非常慢。修改了某模块的一个算法使其运行速度得到了提升，则该行为属于 ( ) 维护。",
            "options": [
                "改正性",
                "适应性",
                "完善性",
                "预防性"
            ],
            "correct_answer": [
                "完善性"
            ],
            "analysis": "该修改属于优化已有功能，提升性能，故属于完善性维护。"
        },
        {
            "type": "single-choice",
            "content": "下述概念中不属于面向对象的是（ ）",
            "options": [
                "继承、多态",
                "对象",
                "类、封装",
                "过程调用"
            ],
            "correct_answer": [
                "过程调用"
            ],
            "analysis": "过程调用是面向过程的概念，而非面向对象的核心概念。"
        },
        {
            "type": "single-choice",
            "content": "类的行为应该基于( )进行测试。",
            "options": [
                "用例图",
                "数据流图",
                "状态图",
                "顺序图"
            ],
            "correct_answer": [
                "状态图"
            ],
            "analysis": "类的行为变化应通过状态图建模与测试。"
        },
        {
            "type": "single-choice",
            "content": "符合对象和类的关系的是( )",
            "options": [
                "人和老虎",
                "书和汽车",
                "楼和土地",
                "松树与植物"
            ],
            "correct_answer": [
                "松树与植物"
            ],
            "analysis": ""
        },
        {
            "type": "single-choice",
            "content": "类图属于( )模型",
            "options": [
                "动态",
                "功能",
                "对象",
                "关联"
            ],
            "correct_answer": [
                "对象"
            ]
        },
        {
            "type": "single-choice",
            "content": "封装是指把对象的（ ）结合在一起，组成独立的对象",
            "options": [
                "消息和事件",
                "属性和服务",
                "信息流",
                "数据的集合"
            ],
            "correct_answer": [
                "属性和服务"
            ],
            "analysis": "封装指将数据（属性）和操作（服务）结合在一起。"
        },
        {
            "type": "single-choice",
            "content": "软件工程的主要目的之一就是要提高软件的可维护性，减少软件维护所需要的工作量，降低软件系统的总成本。",
            "options": [
                "对",
                "错"
            ],
            "correct_answer": [
                "对"
            ],
            "analysis": "见PPT第8章第一部分内容，明确提到这是软件工程的主要目的之一。"
        },
        {
            "type": "single-choice",
            "content": "软件维护活动花费的工作量占整个生存期工作量的50%",
            "options": [
                "对",
                "错"
            ],
            "correct_answer": [
                "错"
            ],
            "analysis": "维护工作量一般超过70%，而非50%。"
        },
        {
            "type": "single-choice",
            "content": "非结构化维护的对象主要是文档。",
            "options": [
                "对",
                "错"
            ],
            "correct_answer": [
                "错"
            ],
            "analysis": "非结构化维护缺少文档，主要针对代码进行直接维护。"
        },
        {
            "type": "single-choice",
            "content": "软件再工程就是对这些系统进行分析研究，利用好的软件开发方法，重新构造一个新的目标系统，这样的系统将保持原系统所需要的功能，并使得新系统易于维护。",
            "options": [
                "对",
                "错"
            ],
            "correct_answer": [
                "对"
            ],
            "analysis": "该说法与PPT中对软件再工程的定义一致。"
        },
        {
            "type": "single-choice",
            "content": "传统的单元测试方法与面向对象软件的单元测试区别不大。",
            "options": [
                "对",
                "错"
            ],
            "correct_answer": [
                "错"
            ],
            "analysis": "面向对象单元测试以类为单位，方法不同于传统函数模块测试。"
        },
        {
            "type": "single-choice",
            "content": "面向对象的单元测试主要是对类成员函数测试。",
            "options": [
                "对",
                "错"
            ],
            "correct_answer": [
                "对"
            ],
            "analysis": "类的成员函数是对象行为的基本单元，测试重点。"
        },
        {
            "type": "single-choice",
            "content": "面向对象的集成测试也可以使用传统的自顶向下和自底向上集成策略。",
            "options": [
                "对",
                "错"
            ],
            "correct_answer": [
                "对"
            ],
            "analysis": "传统集成策略仍适用于面向对象的集成测试场景。"
        },
        {
            "type": "single-choice",
            "content": "用例之间的关系包括关系、扩展。",
            "options": [
                "对",
                "错"
            ],
            "correct_answer": [
                "错"
            ],
            "analysis": "UML中用例之间关系包括“包含”和“扩展”关系。"
        },
        {
            "type": "single-choice",
            "content": "多态性是指不同的对象，收到同一消息可以产生相同的结果。",
            "options": [
                "对",
                "错"
            ],
            "correct_answer": [
                "错"
            ],
            "analysis": "多态的本质是相同消息产生不同行为，而非相同结果。"
        },
        {
            "type": "fill-in-blank",
            "content": "软件维护分为4类，分别是（ ），（ ），（ ），（ ）",
            "blanks": [
                "空1",
                "空2",
                "空3",
                "空4"
            ],
            "correct_answer": [
                "改正性维护",
                "适应性维护",
                "完善性维护",
                "预防性维护"
            ],
            "analysis": "来源于PPT 8.1.1，明确给出了4类维护类型。"
        },
        {
            "type": "fill-in-blank",
            "content": "（ ）是软件可维护性的主要影响因素",
            "blanks": [
                "空1"
            ],
            "correct_answer": [
                "文档"
            ],
            "analysis": "教材8.3.2"
        },
        {
            "type": "fill-in-blank",
            "content": "软件可维护性的主要决定因素是（），（），（），（），（），（）",
            "blanks": [
                "空1",
                "空2",
                "空3",
                "空4",
                "空5",
                "空6"
            ],
            "correct_answer": [
                "可理解性",
                "可测试性",
                "可靠性",
                "可修改性",
                "可移植性",
                "可重用性"
            ],
            "analysis": "参见教材8.3.1"
        },
        {
            "type": "short-answer",
            "content": "设计一个简单的考务处理系统，要求完成以下工作： \n\n1）对考生送来的报名单进行检查\n\n2）对合格的报名单编好准考证号后将准考证送给学生，并将汇总后的考生名单送给阅卷站\n\n3）对阅卷站送来的成绩单进行检查，并根据考试中心制定的合格标准审定合格者\n\n4）制作考生通知单（含成绩及合格/不合格标志）送给考生\n\n5）按地区进行成绩分类统计和试题难度分析，产生统计分析表\n\n画出此系统的顶层数据流图。",
            "correct_answer": [
                "![Image](https://img20.360buyimg.com/openfeedback/jfs/t1/300967/1/8954/17719/685f37b8Fd5da0dae/1324554e388e132a.png)"
            ],
            "analysis": "详见图示数据流图。应包括：考生、阅卷站、考试中心、报名单、准考证、成绩单、通知单、统计表等要素的输入输出关系。"
        }
    ],
    "sets": [
        {
            "id": "rjgc-6",
            "name": "06-软工-作业5",
            "category": "软件工程",
            "tags": [
                "软件维护",
                "面向对象",
                "软件质量",
                "数据流图",
                "软件工程"
            ],
            "createTime": "2024-06-20 16:10:00",
            "updateTime": "2024-06-27 11:19:12",
            "description": "# **没提供正确答案，仅供参考，简答题已校对教材，选择题有一题标注了答案不确定**\n[作业5](https://mooc1.chaoxing.com/mooc-ans/mooc2/work/view?courseId=227327462&classId=115629904&cpi=411759952&workId=44406384&answerId=53776183&enc=fe6f370441cdc7d40bc6a1b5f3b45d2b)，包含单选、判断、填空、简答题，涉及软件维护、面向对象、软件质量和数据流图等内容。"
        }
    ]
}